@*
    Requirements Step (Step 1) - Workflow Grid Item
*@
<div class="workflow-grid-item" data-step="1">
    <div class="workflow-grid-item-header">
        <span>üìÅ</span>
        Requirements
    </div>
    <div class="workflow-grid-item-content">
        <!-- Folder Configuration -->
        <div class="mb-3">
            <form asp-action="SetDocumentsFolder" method="post">
                <div class="workflow-input-group">
                    <input type="text" class="workflow-form-control" name="folderPath"
                           placeholder="Documents folder path"
                           value="@ViewBag.DocumentsFolder">
                    <button class="workflow-btn workflow-btn-secondary" type="submit">Set Folder</button>
                </div>
            </form>
        </div>
        
        <!-- Document Selection -->
        <div class="flow-item" onclick="window.toggleStandardsSelector();" tabindex="0">
            <span class="icon">üìÑ</span>
            <span class="value" id="standardsValue">
                @if (ViewBag.SelectedDocuments != null && ViewBag.SelectedDocuments.Count > 0)
                {
                    @($"Selected: {string.Join(", ", ((List<string>)ViewBag.SelectedDocuments).Select(doc => DocumentService.GetDocumentDisplayName(doc)))}")
                }
                else
                {
                    <em>No documents selected</em>
                }
            </span>
            <span class="edit-icon">‚úèÔ∏è</span>
        </div>

        <!-- Hidden form that appears on click -->
        <div id="standardsDropdown" class="workflow-dropdown" style="display: none;">
            @if (ViewBag.AvailableDocuments.Count > 0)
            {
                <form asp-action="SelectDocuments" method="post" id="documentSelectionForm">
                    <div class="mb-3">
                        <label>Select coding standards:</label>
                        @foreach (var doc in ViewBag.AvailableDocuments)
                        {
                            <div class="workflow-form-check">
                                <input class="workflow-form-check-input" type="checkbox"
                                       name="selectedDocuments" value="@doc"
                                       @(ViewBag.SelectedDocuments != null && ViewBag.SelectedDocuments.Contains(doc) ? "checked" : "")>
                                <label class="workflow-form-check-label">@DocumentService.GetDocumentDisplayName(doc)</label>
                            </div>
                        }
                    </div>
                    <button type="submit" class="workflow-btn workflow-btn-primary" onclick="handleDocumentSelection(event)">Apply Selection</button>
                </form>
            }
            else if (!string.IsNullOrEmpty(ViewBag.DocumentsFolder))
            {
                <div class="workflow-alert workflow-alert-info">
                    üìã No .md documents found in folder
                </div>
            }
        </div>
        
        <!-- Selected Documents Summary -->
        @if (ViewBag.SelectedDocuments != null && ViewBag.SelectedDocuments.Count > 0)
        {
            <div class="workflow-alert workflow-alert-success mt-3">
                ‚úÖ Selected: <strong>@string.Join(", ", ((List<string>)ViewBag.SelectedDocuments).Select(doc => DocumentService.GetDocumentDisplayName(doc)))</strong>
            </div>
        }
        
        <!-- Document Scan Error -->
        @if (ViewBag.DocumentScanError != null)
        {
            <div class="workflow-alert workflow-alert-warning mt-3">
                ‚ö†Ô∏è @ViewBag.DocumentScanError
            </div>
        }
    </div>
</div>